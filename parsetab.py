
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMENT STRING BOOLEAN EQ NEQ GT GE LT LE PLUS MINUS PROD DIV EQUALS LPAREN RPAREN LSQUARE RSQUARE COMA ID NUMBER COL SEMI IF ELSE FOR IN AND OR NOT LAMBDA MAP REDUCE FILTER INPUT OUTPUTstatement    : expressionStmt\n                    | conditionalStmt SEMI\n                    | iterationStmt SEMIiterationStmt    : FOR ID IN iterationElement COL statementiterationElement   : IDconditionalStmt  : IF expressionStmt COL statement\n                        | IF expressionStmt COL statement ELSE COL statementexpressionStmt   : expressionStmt OR andExpression\n                        | andExpressionandExpression    : andExpression AND unaryRelExpression\n                        | unaryRelExpressionunaryRelExpression   : NOT unaryRelExpression\n                            | relExpressionrelExpression    : sumExpression relop sumExpression\n                        | sumExpressionrelop    : LE\n                | LT\n                | GT\n                | GE\n                | EQ\n                | NEQsumExpression    : sumExpression sumop term\n                        | termsumop    : PLUS\n                | MINUSterm : term mulop sumElement\n            | sumElementsumElement   : ID\n                    | NUMBERmulop    : PROD\n                | DIV'
    
_lr_action_items = {'IF':([0,38,47,48,],[6,6,6,6,]),'FOR':([0,38,47,48,],[7,7,7,7,]),'NOT':([0,6,10,16,19,38,47,48,],[10,10,10,10,10,10,10,10,]),'ID':([0,6,7,10,16,19,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,47,48,],[8,8,21,8,8,8,8,8,-16,-17,-18,-19,-20,-21,-24,-25,8,-30,-31,8,44,8,8,]),'NUMBER':([0,6,10,16,19,23,24,25,26,27,28,29,30,31,32,33,34,35,38,47,48,],[15,15,15,15,15,15,15,-16,-17,-18,-19,-20,-21,-24,-25,15,-30,-31,15,15,15,]),'$end':([1,2,5,8,9,11,12,13,14,15,17,18,22,36,37,40,41,42,],[0,-1,-9,-28,-11,-13,-15,-23,-27,-29,-2,-3,-12,-8,-10,-14,-22,-26,]),'ELSE':([2,5,8,9,11,12,13,14,15,17,18,22,36,37,40,41,42,43,],[-1,-9,-28,-11,-13,-15,-23,-27,-29,-2,-3,-12,-8,-10,-14,-22,-26,46,]),'SEMI':([2,3,4,5,8,9,11,12,13,14,15,17,18,22,36,37,40,41,42,43,49,50,],[-1,17,18,-9,-28,-11,-13,-15,-23,-27,-29,-2,-3,-12,-8,-10,-14,-22,-26,-6,-4,-7,]),'OR':([2,5,8,9,11,12,13,14,15,20,22,36,37,40,41,42,],[16,-9,-28,-11,-13,-15,-23,-27,-29,16,-12,-8,-10,-14,-22,-26,]),'COL':([5,8,9,11,12,13,14,15,20,22,36,37,40,41,42,44,45,46,],[-9,-28,-11,-13,-15,-23,-27,-29,38,-12,-8,-10,-14,-22,-26,-5,47,48,]),'AND':([5,8,9,11,12,13,14,15,22,36,37,40,41,42,],[19,-28,-11,-13,-15,-23,-27,-29,-12,19,-10,-14,-22,-26,]),'PROD':([8,13,14,15,41,42,],[-28,34,-27,-29,34,-26,]),'DIV':([8,13,14,15,41,42,],[-28,35,-27,-29,35,-26,]),'LE':([8,12,13,14,15,41,42,],[-28,25,-23,-27,-29,-22,-26,]),'LT':([8,12,13,14,15,41,42,],[-28,26,-23,-27,-29,-22,-26,]),'GT':([8,12,13,14,15,41,42,],[-28,27,-23,-27,-29,-22,-26,]),'GE':([8,12,13,14,15,41,42,],[-28,28,-23,-27,-29,-22,-26,]),'EQ':([8,12,13,14,15,41,42,],[-28,29,-23,-27,-29,-22,-26,]),'NEQ':([8,12,13,14,15,41,42,],[-28,30,-23,-27,-29,-22,-26,]),'PLUS':([8,12,13,14,15,40,41,42,],[-28,31,-23,-27,-29,31,-22,-26,]),'MINUS':([8,12,13,14,15,40,41,42,],[-28,32,-23,-27,-29,32,-22,-26,]),'IN':([21,],[39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,38,47,48,],[1,43,49,50,]),'expressionStmt':([0,6,38,47,48,],[2,20,2,2,2,]),'conditionalStmt':([0,38,47,48,],[3,3,3,3,]),'iterationStmt':([0,38,47,48,],[4,4,4,4,]),'andExpression':([0,6,16,38,47,48,],[5,5,36,5,5,5,]),'unaryRelExpression':([0,6,10,16,19,38,47,48,],[9,9,22,9,37,9,9,9,]),'relExpression':([0,6,10,16,19,38,47,48,],[11,11,11,11,11,11,11,11,]),'sumExpression':([0,6,10,16,19,23,38,47,48,],[12,12,12,12,12,40,12,12,12,]),'term':([0,6,10,16,19,23,24,38,47,48,],[13,13,13,13,13,13,41,13,13,13,]),'sumElement':([0,6,10,16,19,23,24,33,38,47,48,],[14,14,14,14,14,14,14,42,14,14,14,]),'relop':([12,],[23,]),'sumop':([12,40,],[24,24,]),'mulop':([13,41,],[33,33,]),'iterationElement':([39,],[45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expressionStmt','statement',1,'p_statement','interpreter.py',105),
  ('statement -> conditionalStmt SEMI','statement',2,'p_statement','interpreter.py',106),
  ('statement -> iterationStmt SEMI','statement',2,'p_statement','interpreter.py',107),
  ('iterationStmt -> FOR ID IN iterationElement COL statement','iterationStmt',6,'p_iterationStmt','interpreter.py',112),
  ('iterationElement -> ID','iterationElement',1,'p_iterationElement','interpreter.py',117),
  ('conditionalStmt -> IF expressionStmt COL statement','conditionalStmt',4,'p_conditionalStmt','interpreter.py',122),
  ('conditionalStmt -> IF expressionStmt COL statement ELSE COL statement','conditionalStmt',7,'p_conditionalStmt','interpreter.py',123),
  ('expressionStmt -> expressionStmt OR andExpression','expressionStmt',3,'p_expressionStmt','interpreter.py',128),
  ('expressionStmt -> andExpression','expressionStmt',1,'p_expressionStmt','interpreter.py',129),
  ('andExpression -> andExpression AND unaryRelExpression','andExpression',3,'p_andExpression','interpreter.py',134),
  ('andExpression -> unaryRelExpression','andExpression',1,'p_andExpression','interpreter.py',135),
  ('unaryRelExpression -> NOT unaryRelExpression','unaryRelExpression',2,'p_unaryRelExpression','interpreter.py',140),
  ('unaryRelExpression -> relExpression','unaryRelExpression',1,'p_unaryRelExpression','interpreter.py',141),
  ('relExpression -> sumExpression relop sumExpression','relExpression',3,'p_relExpression','interpreter.py',146),
  ('relExpression -> sumExpression','relExpression',1,'p_relExpression','interpreter.py',147),
  ('relop -> LE','relop',1,'p_relop','interpreter.py',152),
  ('relop -> LT','relop',1,'p_relop','interpreter.py',153),
  ('relop -> GT','relop',1,'p_relop','interpreter.py',154),
  ('relop -> GE','relop',1,'p_relop','interpreter.py',155),
  ('relop -> EQ','relop',1,'p_relop','interpreter.py',156),
  ('relop -> NEQ','relop',1,'p_relop','interpreter.py',157),
  ('sumExpression -> sumExpression sumop term','sumExpression',3,'p_sumExpression','interpreter.py',162),
  ('sumExpression -> term','sumExpression',1,'p_sumExpression','interpreter.py',163),
  ('sumop -> PLUS','sumop',1,'p_sumop','interpreter.py',168),
  ('sumop -> MINUS','sumop',1,'p_sumop','interpreter.py',169),
  ('term -> term mulop sumElement','term',3,'p_term','interpreter.py',174),
  ('term -> sumElement','term',1,'p_term','interpreter.py',175),
  ('sumElement -> ID','sumElement',1,'p_sumElement','interpreter.py',180),
  ('sumElement -> NUMBER','sumElement',1,'p_sumElement','interpreter.py',181),
  ('mulop -> PROD','mulop',1,'p_mulop','interpreter.py',186),
  ('mulop -> DIV','mulop',1,'p_mulop','interpreter.py',187),
]
